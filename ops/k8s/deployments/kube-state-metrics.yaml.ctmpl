apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
    name: kube-state-metrics
rules:
    - apiGroups:
          - ""
      resources:
          - configmaps
          - secrets
          - nodes
          - pods
          - services
          - resourcequotas
          - replicationcontrollers
          - limitranges
          - persistentvolumeclaims
          - persistentvolumes
          - namespaces
          - endpoints
      verbs:
          - list
          - watch
    - apiGroups:
          - extensions
      resources:
          - daemonsets
          - deployments
          - replicasets
      verbs:
          - list
          - watch
    - apiGroups:
          - apps
      resources:
          - statefulsets
      verbs:
          - list
          - watch
    - apiGroups:
          - batch
      resources:
          - cronjobs
          - jobs
      verbs:
          - list
          - watch
    - apiGroups:
          - autoscaling
      resources:
          - horizontalpodautoscalers
      verbs:
          - list
          - watch
    - apiGroups:
          - authentication.k8s.io
      resources:
          - tokenreviews
      verbs:
          - create
    - apiGroups:
          - authorization.k8s.io
      resources:
          - subjectaccessreviews
      verbs:
          - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
    name: kube-state-metrics
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: kube-state-metrics
subjects:
    - kind: ServiceAccount
      name: kube-state-metrics
      namespace: data-repo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
    name: kube-state-metrics
    namespace: data-repo
rules:
    - apiGroups: ['policy']
      resources: ['podsecuritypolicies']
      verbs: ["use"]
      resourceNames:
          - pod-running-policy
    - apiGroups:
          - ""
      resources:
          - pods
      verbs:
          - get
    - apiGroups:
          - extensions
      resourceNames:
          - kube-state-metrics
      resources:
          - deployments
      verbs:
          - get
          - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
    name: kube-state-metrics
    namespace: data-repo
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: kube-state-metrics
subjects:
    - kind: ServiceAccount
      name: kube-state-metrics
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
    name: pod-running-policy
    labels:
        name: dev
spec:
    privileged: false  # Don't allow privileged pods!
    # The rest fills in some required fields.
    seLinux:
        rule: RunAsAny
    supplementalGroups:
        rule: RunAsAny
    runAsUser:
        rule: RunAsAny
    fsGroup:
        rule: RunAsAny
    volumes:
        - '*'
---
apiVersion: v1
kind: ServiceAccount
metadata:
    name: kube-state-metrics
    namespace: data-repo
---
apiVersion: v1
kind: Service
metadata:
    labels:
        k8s-app: kube-state-metrics
    annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8081'
        prometheus.io/port2: '8082'
    name: kube-state-metrics
    namespace: data-repo
spec:
    clusterIP: None
    ports:
        - name: metrics
          port: 8081
        - name: metrics-self
          port: 8082
    selector:
        app: kube-state-metrics
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
    labels:
        app: kube-state-metrics
    name: kube-state-metrics
    namespace: data-repo
spec:
    replicas: 1
    selector:
        matchLabels:
            app: kube-state-metrics
    template:
        metadata:
            labels:
                app: kube-state-metrics
        spec:
            containers:
                - args:
                      - --host=0.0.0.0
                      - --port=8081
                      - --telemetry-host=0.0.0.0
                      - --telemetry-port=8082
                  image: quay.io/coreos/kube-state-metrics:v1.3.1
                  name: kube-state-metrics
                  ports:
                      - name: metrics
                        containerPort: 8081
                      - name: metrics-self
                        containerPort: 8082
                  resources:
                      limits:
                          cpu: 100m
                          memory: 150Mi
                      requests:
                          cpu: 100m
                          memory: 150Mi
            securityContext:
                runAsNonRoot: true
                runAsUser: 65534
            serviceAccountName: kube-state-metrics

