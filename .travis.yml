before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/google-cloud-sdk/

env:
  - PATH=${HOME}/google-cloud-sdk/bin:$PATH CLOUDSDK_CORE_DISABLE_PROMPTS=1

language: java

jdk:
  - openjdk8

addons:
  postgresql: "9.6"

services:
  - docker
  - postgresql

before_install:
  - if [ ! -d ${HOME}/google-cloud-sdk/bin ]; then
      rm -rf $HOME/google-cloud-sdk;
      curl https://sdk.cloud.google.com | bash > /dev/null;
    fi
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud config set project $INTEGRATION_PROJECT
  - gcloud config set compute/zone $INTEGRATION_ZONE
  - ./render-configs.sh $TRAVIS_TOKEN
  - gcloud auth activate-service-account --key-file $GOOGLE_APPLICATION_CREDENTIALS
  - gcloud auth configure-docker
  - gcloud components install kubectl
  - export CUR_IPS=$(gcloud container clusters describe ${CLUSTER_NAME} --format json | \
      jq -r '[.masterAuthorizedNetworksConfig.cidrBlocks[] | .cidrBlock]')
  - export RUNNER_IP=$(curl https://api.ipify.org/?format=text | xargs printf '[ "%s/32" ]')
  - export NEW_IPS=$(printf '%s\n' $CUR_IPS $RUNNER_IP | jq -s -r 'add | unique | join(",")')
  - gcloud container clusters update ${CLUSTER_NAME} \
              --enable-master-authorized-networks \
              --master-authorized-networks ${NEW_IPS}
  - gcloud container clusters get-credentials $CLUSTER_NAME
  - export RESTORE_IPS=$(printf '%s\n' $CUR_IPS | jq -s -r 'add | unique | join(",")')

script:
  - set -e
  - psql -U postgres -f ./db/create-data-repo-db
  - GCR_TAG=$(git rev-parse --short HEAD) ./gradlew jib
  - kubectl --namespace temp set image
    deployment/temp-jade-datarepo-api
    "temp-jade-datarepo-api=gcr.io/${DEV_PROJECT}/jade-data-repo:$(git rev-parse --short HEAD)"
  - ./gradlew assemble
  - ./gradlew check --scan
  - ./gradlew testConnected --scan
  - ./gradlew testIntegration --scan

after_script:
  - if [ ! -z "${RESTORE_IPS}"]; then \
      gcloud container clusters update ${CLUSTER_NAME} \
      --enable-master-authorized-networks \
      --master-authorized-networks ${RESTORE_IPS} \
    fi
