/*
 * Data Repository API
 * This document defines the REST API for Data Repository. **Status: design in progress**  There are four top-level endpoints (besides some used by swagger):  * /swagger-ui.html - generated by swagger: swagger API page that provides this documentation and a live UI for      submitting REST requests  * /status - provides the operational status of the service  * /api    - is the authenticated and authorized Data Repository API  * /ga4gh/drs/v1 - is a transcription of the Data Repository Service API  The overall API (/api) currently supports two interfaces:  * Repository - a general and default interface for initial setup, managing ingest and repository metadata  * Resource - an interface for managing billing accounts and resources  The API endpoints are organized by interface. Each interface is separately versioned.  ## Notes on Naming All of the reference items are suffixed with \"Model\". Those names are used as the class names in the generated Java code. It is helpful to distinguish these model classes from other related classes, like the DAO classes and the operation classes.  ## Editing and debugging I have found it best to edit this file directly to make changes and then use the swagger-editor to validate. The errors out of swagger-codegen are not that helpful. In the swagger-editor, it gives you nice errors and links to the place in the YAML where the errors are.  But... the swagger-editor has been a bit of a pain for me to run. I tried the online website and was not able to load my YAML. Instead, I run it locally in a docker container, like this: ``` docker pull swaggerapi/swagger-editor docker run -p 9090:8080 swaggerapi/swagger-editor ``` Then navigate to localhost:9090 in your browser.  I have not been able to get the file upload to work. It is a bit of a PITA, but I copy-paste the source code, replacing what is in the editor. Then make any fixes. Then copy-paste the resulting, valid file back into our source code. Not elegant, but easier than playing detective with the swagger-codegen errors.  This might be something about my browser or environment, so give it a try yourself and see how it goes.  ## Merging the DRS standard swagger into this swagger ##  The merging is done in three sections:  1. Merging the security definitions into our security definitions  2. This section of paths. We make all paths explicit (prefixed with /ga4gh/drs/v1)     All standard DRS definitions and parameters are prefixed with 'DRS' to separate them     from our native definitions and parameters. We remove the x-swagger-router-controller lines.  3. A separate part of the definitions section for the DRS definitions  NOTE: the code here does not relect the DRS spec anymore. See DR-409. 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package bio.terra.datarepo.model;

import java.util.Objects;
import java.util.Arrays;
import bio.terra.datarepo.model.DRSContentsObject;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * DRSContentsObject
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T14:51:02.312-04:00")
public class DRSContentsObject {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("drs_uri")
  private List<String> drsUri = null;

  @JsonProperty("contents")
  private List<DRSContentsObject> contents = null;

  public DRSContentsObject name(String name) {
    this.name = name;
    return this;
  }

   /**
   * A name declared by the bundle author that must be used when materialising this object, overriding any name directly associated with the object itself. The name must be unique with the containing bundle. This string is made up of uppercase and lowercase letters, decimal digits, hypen, period, and underscore [A-Za-z0-9.-_]. See http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_282[portable filenames].
   * @return name
  **/
  @ApiModelProperty(required = true, value = "A name declared by the bundle author that must be used when materialising this object, overriding any name directly associated with the object itself. The name must be unique with the containing bundle. This string is made up of uppercase and lowercase letters, decimal digits, hypen, period, and underscore [A-Za-z0-9.-_]. See http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_282[portable filenames].")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DRSContentsObject id(String id) {
    this.id = id;
    return this;
  }

   /**
   * A DRS identifier of an &#x60;Object&#x60; (either a single blob or a nested bundle). If this ContentsObject is an object within a nested bundle, then the id is optional. Otherwise, the id is required.
   * @return id
  **/
  @ApiModelProperty(value = "A DRS identifier of an `Object` (either a single blob or a nested bundle). If this ContentsObject is an object within a nested bundle, then the id is optional. Otherwise, the id is required.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public DRSContentsObject drsUri(List<String> drsUri) {
    this.drsUri = drsUri;
    return this;
  }

  public DRSContentsObject addDrsUriItem(String drsUriItem) {
    if (this.drsUri == null) {
      this.drsUri = new ArrayList<>();
    }
    this.drsUri.add(drsUriItem);
    return this;
  }

   /**
   * A list of full DRS identifier URI paths that may be used to obtain the object. These URIs may be external to this DRS instance.
   * @return drsUri
  **/
  @ApiModelProperty(example = "\"drs://example.com/ga4gh/drs/v1/objects/{object_id}\"", value = "A list of full DRS identifier URI paths that may be used to obtain the object. These URIs may be external to this DRS instance.")
  public List<String> getDrsUri() {
    return drsUri;
  }

  public void setDrsUri(List<String> drsUri) {
    this.drsUri = drsUri;
  }

  public DRSContentsObject contents(List<DRSContentsObject> contents) {
    this.contents = contents;
    return this;
  }

  public DRSContentsObject addContentsItem(DRSContentsObject contentsItem) {
    if (this.contents == null) {
      this.contents = new ArrayList<>();
    }
    this.contents.add(contentsItem);
    return this;
  }

   /**
   * If this ContentsObject describes a nested bundle and the caller specified \&quot;?expand&#x3D;true\&quot; on the request, then this contents array must be present and describe the objects within the nested bundle.
   * @return contents
  **/
  @ApiModelProperty(value = "If this ContentsObject describes a nested bundle and the caller specified \"?expand=true\" on the request, then this contents array must be present and describe the objects within the nested bundle.")
  public List<DRSContentsObject> getContents() {
    return contents;
  }

  public void setContents(List<DRSContentsObject> contents) {
    this.contents = contents;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DRSContentsObject drSContentsObject = (DRSContentsObject) o;
    return Objects.equals(this.name, drSContentsObject.name) &&
        Objects.equals(this.id, drSContentsObject.id) &&
        Objects.equals(this.drsUri, drSContentsObject.drsUri) &&
        Objects.equals(this.contents, drSContentsObject.contents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, id, drsUri, contents);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DRSContentsObject {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    drsUri: ").append(toIndentedString(drsUri)).append("\n");
    sb.append("    contents: ").append(toIndentedString(contents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

