plugins {
    id 'java'
    id 'application'
    id "com.google.cloud.tools.jib" version "1.6.1"
    id 'com.diffplug.gradle.spotless' version '3.27.2'
    id 'com.github.spotbugs' version '4.0.0'
}

repositories {
    mavenCentral()
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-release-local/'
    }
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
    }
}

dependencies {
    ext {
        junit = "5.4.2"
        findbugsAnnotations = "3.0.1"

        jackson = "2.10.2"
        kubernetesClient = "8.0.2"
        logback = "1.2.3"
        slf4j = "1.7.25"
        hamcrest = "2.1"

        googleApi = "1.23.0"
        googlePeople = "v1-rev277-1.23.0"
        googleOauth2 = "0.20.0"

        swaggerAnnotations = "1.5.22"
        jersey = "2.30.1"

        datarepoClient = "1.0.39-SNAPSHOT"
    }

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junit}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junit}")
    compileOnly "com.google.code.findbugs:annotations:${findbugsAnnotations}"

    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jackson}"
    compile "io.kubernetes:client-java:${kubernetesClient}"
    compile "ch.qos.logback:logback-classic:${logback}"
    compile "org.slf4j:slf4j-api:${slf4j}"
    compile "org.hamcrest:hamcrest:${hamcrest}"

    compile "com.google.api-client:google-api-client:${googleApi}"
    compile "com.google.oauth-client:google-oauth-client-jetty:${googleApi}"
    compile "com.google.apis:google-api-services-people:${googlePeople}"
    compile "com.google.auth:google-auth-library-oauth2-http:${googleOauth2}"


    // Gradle project property "datarepoclientjar" overrides the fetch from Maven
    if (project.hasProperty("datarepoclientjar")) {
        implementation files(project.findProperty("datarepoclientjar"))

        compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jackson}"
        compile "org.glassfish.jersey.core:jersey-client:${jersey}"
        compile "org.glassfish.jersey.media:jersey-media-json-jackson:${jersey}"
        compile "org.glassfish.jersey.media:jersey-media-multipart:${jersey}"
    } else {
        implementation "bio.terra:datarepo-client:${datarepoClient}"
    }

}

group 'bio.terra'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

test {
    useJUnitPlatform()

    testLogging {
        showStandardStreams = true
    }
}

application {
    ext {
        javaMainClass = "runner.TestRunner"
    }
    mainClassName = javaMainClass
}

spotless {
    java {
        googleJavaFormat()
    }
}

spotbugs {
    effort = 'max'
    // This makes the "html" reports come out in plain text so you can just open the file in IntelliJ
    // and look at your bugs instead of having to switch to a browser.
    extraArgs = [ '-emacs']
}
spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main.txt")
            stylesheet = 'fancy.xsl'
        }
    }
}
spotbugsTest {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/test.txt")
            stylesheet = 'fancy.xsl'
        }
    }
}

compileJava.dependsOn tasks.spotlessApply
