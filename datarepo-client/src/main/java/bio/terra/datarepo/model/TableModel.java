/*
 * Data Repository API
 * This document defines the REST API for Data Repository. **Status: design in progress**  There are four top-level endpoints (besides some used by swagger):  * /swagger-ui.html - generated by swagger: swagger API page that provides this documentation and a live UI for      submitting REST requests  * /status - provides the operational status of the service  * /api    - is the authenticated and authorized Data Repository API  * /ga4gh/drs/v1 - is a transcription of the Data Repository Service API  The overall API (/api) currently supports two interfaces:  * Repository - a general and default interface for initial setup, managing ingest and repository metadata  * Resource - an interface for managing billing accounts and resources  The API endpoints are organized by interface. Each interface is separately versioned.  ## Notes on Naming All of the reference items are suffixed with \"Model\". Those names are used as the class names in the generated Java code. It is helpful to distinguish these model classes from other related classes, like the DAO classes and the operation classes.  ## Editing and debugging I have found it best to edit this file directly to make changes and then use the swagger-editor to validate. The errors out of swagger-codegen are not that helpful. In the swagger-editor, it gives you nice errors and links to the place in the YAML where the errors are.  But... the swagger-editor has been a bit of a pain for me to run. I tried the online website and was not able to load my YAML. Instead, I run it locally in a docker container, like this: ``` docker pull swaggerapi/swagger-editor docker run -p 9090:8080 swaggerapi/swagger-editor ``` Then navigate to localhost:9090 in your browser.  I have not been able to get the file upload to work. It is a bit of a PITA, but I copy-paste the source code, replacing what is in the editor. Then make any fixes. Then copy-paste the resulting, valid file back into our source code. Not elegant, but easier than playing detective with the swagger-codegen errors.  This might be something about my browser or environment, so give it a try yourself and see how it goes.  ## Merging the DRS standard swagger into this swagger ##  The merging is done in three sections:  1. Merging the security definitions into our security definitions  2. This section of paths. We make all paths explicit (prefixed with /ga4gh/drs/v1)     All standard DRS definitions and parameters are prefixed with 'DRS' to separate them     from our native definitions and parameters. We remove the x-swagger-router-controller lines.  3. A separate part of the definitions section for the DRS definitions  NOTE: the code here does not relect the DRS spec anymore. See DR-409. 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package bio.terra.datarepo.model;

import java.util.Objects;
import java.util.Arrays;
import bio.terra.datarepo.model.ColumnModel;
import bio.terra.datarepo.model.DatePartitionOptionsModel;
import bio.terra.datarepo.model.IntPartitionOptionsModel;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * one table in a schema
 */
@ApiModel(description = "one table in a schema")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T14:51:02.312-04:00")
public class TableModel {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("columns")
  private List<ColumnModel> columns = new ArrayList<>();

  @JsonProperty("primaryKey")
  private List<String> primaryKey = null;

  /**
   * Gets or Sets partitionMode
   */
  public enum PartitionModeEnum {
    NONE("none"),
    
    DATE("date"),
    
    INT("int");

    private String value;

    PartitionModeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PartitionModeEnum fromValue(String text) {
      for (PartitionModeEnum b : PartitionModeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("partitionMode")
  private PartitionModeEnum partitionMode = PartitionModeEnum.NONE;

  @JsonProperty("datePartitionOptions")
  private DatePartitionOptionsModel datePartitionOptions = null;

  @JsonProperty("intPartitionOptions")
  private IntPartitionOptionsModel intPartitionOptions = null;

  @JsonProperty("rowCount")
  private Integer rowCount = null;

  public TableModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TableModel columns(List<ColumnModel> columns) {
    this.columns = columns;
    return this;
  }

  public TableModel addColumnsItem(ColumnModel columnsItem) {
    this.columns.add(columnsItem);
    return this;
  }

   /**
   * Get columns
   * @return columns
  **/
  @ApiModelProperty(required = true, value = "")
  public List<ColumnModel> getColumns() {
    return columns;
  }

  public void setColumns(List<ColumnModel> columns) {
    this.columns = columns;
  }

  public TableModel primaryKey(List<String> primaryKey) {
    this.primaryKey = primaryKey;
    return this;
  }

  public TableModel addPrimaryKeyItem(String primaryKeyItem) {
    if (this.primaryKey == null) {
      this.primaryKey = new ArrayList<>();
    }
    this.primaryKey.add(primaryKeyItem);
    return this;
  }

   /**
   * Get primaryKey
   * @return primaryKey
  **/
  @ApiModelProperty(value = "")
  public List<String> getPrimaryKey() {
    return primaryKey;
  }

  public void setPrimaryKey(List<String> primaryKey) {
    this.primaryKey = primaryKey;
  }

  public TableModel partitionMode(PartitionModeEnum partitionMode) {
    this.partitionMode = partitionMode;
    return this;
  }

   /**
   * Get partitionMode
   * @return partitionMode
  **/
  @ApiModelProperty(value = "")
  public PartitionModeEnum getPartitionMode() {
    return partitionMode;
  }

  public void setPartitionMode(PartitionModeEnum partitionMode) {
    this.partitionMode = partitionMode;
  }

  public TableModel datePartitionOptions(DatePartitionOptionsModel datePartitionOptions) {
    this.datePartitionOptions = datePartitionOptions;
    return this;
  }

   /**
   * Get datePartitionOptions
   * @return datePartitionOptions
  **/
  @ApiModelProperty(value = "")
  public DatePartitionOptionsModel getDatePartitionOptions() {
    return datePartitionOptions;
  }

  public void setDatePartitionOptions(DatePartitionOptionsModel datePartitionOptions) {
    this.datePartitionOptions = datePartitionOptions;
  }

  public TableModel intPartitionOptions(IntPartitionOptionsModel intPartitionOptions) {
    this.intPartitionOptions = intPartitionOptions;
    return this;
  }

   /**
   * Get intPartitionOptions
   * @return intPartitionOptions
  **/
  @ApiModelProperty(value = "")
  public IntPartitionOptionsModel getIntPartitionOptions() {
    return intPartitionOptions;
  }

  public void setIntPartitionOptions(IntPartitionOptionsModel intPartitionOptions) {
    this.intPartitionOptions = intPartitionOptions;
  }

  public TableModel rowCount(Integer rowCount) {
    this.rowCount = rowCount;
    return this;
  }

   /**
   * Get rowCount
   * @return rowCount
  **/
  @ApiModelProperty(value = "")
  public Integer getRowCount() {
    return rowCount;
  }

  public void setRowCount(Integer rowCount) {
    this.rowCount = rowCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TableModel tableModel = (TableModel) o;
    return Objects.equals(this.name, tableModel.name) &&
        Objects.equals(this.columns, tableModel.columns) &&
        Objects.equals(this.primaryKey, tableModel.primaryKey) &&
        Objects.equals(this.partitionMode, tableModel.partitionMode) &&
        Objects.equals(this.datePartitionOptions, tableModel.datePartitionOptions) &&
        Objects.equals(this.intPartitionOptions, tableModel.intPartitionOptions) &&
        Objects.equals(this.rowCount, tableModel.rowCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, columns, primaryKey, partitionMode, datePartitionOptions, intPartitionOptions, rowCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TableModel {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("    primaryKey: ").append(toIndentedString(primaryKey)).append("\n");
    sb.append("    partitionMode: ").append(toIndentedString(partitionMode)).append("\n");
    sb.append("    datePartitionOptions: ").append(toIndentedString(datePartitionOptions)).append("\n");
    sb.append("    intPartitionOptions: ").append(toIndentedString(intPartitionOptions)).append("\n");
    sb.append("    rowCount: ").append(toIndentedString(rowCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

