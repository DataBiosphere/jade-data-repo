{{ with $environment := env "ENVIRONMENT" }}
{{ with $suffix := env "SUFFIX" }}
{{ with secret (printf "secret/dsde/datarepo/%s/grafana-sa-%s.json" $environment $suffix) }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  labels:
    name: grafana-config
data:
  stackdriverdatasource: |-
    apiVersion: 1

    datasources:
      - name: Stackdriver
        type: stackdriver
        access: proxy
        jsonData:
          tokenUri: {{ .Data.token_uri }}
          clientEmail: {{ .Data.client_email }}
          authenticationType: jwt
          defaultProject: {{ .Data.project_id}}
        secureJsonData:
          privateKey: |
{{ .Data.private_key | indent 12 }}
  dashboards: |-
    apiVersion: 1

    providers:
      # <string> an unique provider name
    - name: 'Cheese'
      # <int> org id. will default to orgId 1 if not specified
      orgId: 1
      # <string, required> name of the dashboard folder. Required
      folder: 'Ops'
      # <string> folder UID. will be automatically generated if not specified
      folderUid: ''
      # <string, required> provider type. Required
      type: file
      # <bool> disable dashboard deletion
      disableDeletion: false
      # <bool> enable dashboard editing
      editable: true
      # <int> how often Grafana will scan for changed dashboards
      updateIntervalSeconds: 10
      options:
        # <string, required> path to dashboard files on disk. Required
        path: /var/lib/grafana/dashboards
  k8sdashboard: |-
    {{ file "ops/k8s/secrets/grafana/k8s-dashboard.json" }}
  loadbalancerdashboard: |-
    {{ file "ops/k8s/secrets/grafana/loadbalancer-dashboard.json" }}
  cloud-sql-dashboard: |-
    {{ file "ops/k8s/secrets/grafana/cloudsql-dashboard.json" }}


{{end}}
{{end}}
{{end}}
