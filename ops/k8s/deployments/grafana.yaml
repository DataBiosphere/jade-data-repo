apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: grafana-deployment
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: grafana-deployment
    spec:
      serviceAccountName: jade-sa
      containers:
      - name: grafana
        image: grafana/grafana
        ports:
        - containerPort: 3000
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 25
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
        - mountPath: /etc/grafana/provisioning/datasources/stackdriver.yaml
          name: "grafana-config-stackdriverdatasource"
          subPath: stackdriver.yaml
        - mountPath: /etc/grafana/provisioning/datasources/prometheus.yaml
          name: "grafana-config-prometheusdatasource"
          subPath: prometheus.yaml
        - mountPath: /etc/grafana/provisioning/datasources/bigquery.yaml
          name: "grafana-config-bigquerydatasource"
          subPath: bigquery.yaml
        - mountPath: /etc/grafana/provisioning/dashboards
          name: "grafana-config-dashboards"
        - mountPath: /var/lib/grafana/dashboards/k8sdashboard
          name: "grafana-config-k8sdashboard"
        - mountPath: /var/lib/grafana/dashboards/loadbalancerdashboard
          name: "grafana-config-loadbalancerdashboard"
        - mountPath: /var/lib/grafana/dashboards/cloud-sql-dashboard
          name: "grafana-config-cloud-sql-dashboard"
        - mountPath: /var/lib/grafana/dashboards/k8sprometheus
          name: "grafana-config-k8sprometheus"
        - mountPath: /var/lib/grafana/dashboards/cloudstorage-dashboard
          name: "grafana-config-cloudstorage-dashboard"
        - mountPath: /var/lib/grafana/dashboards/bigquery-logs
          name: "grafana-config-bigquery-logs"
        env:
        - name: GF_USERS_AUTO_ASSIGN_ORG_ROLE
          value: "Editor"
        - name: GF_SERVER_HTTP_PORT
          value: "3000"
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: google-clientid-secret
              key: adminpassword
        - name: GF_INSTALL_PLUGINS
          value: "grafana-kubernetes-app,grafana-worldmap-panel,doitintl-bigquery-datasource"
        - name: GF_AUTH_GOOGLE_ENABLED
          value: "true"
        - name: GF_AUTH_GOOGLE_ALLOW_SIGN_UP
          value: "true"
        - name: GF_AUTH_GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: google-clientid-secret
              key: clientid
        - name: GF_AUTH_GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: google-clientid-secret
              key: clientid_secret
        - name: GF_AUTH_GOOGLE_SCOPES
          value: "https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
        - name: GF_AUTH_GOOGLE_AUTH_URL
          value: "https://accounts.google.com/o/oauth2/auth"
        - name: GF_AUTH_GOOGLE_AUTH_TOKEN
          value: "https://accounts.google.com/o/oauth2/token"
        - name: GF_AUTH_GOOGLE_API_URL
          value: "https://www.googleapis.com/oauth2/v1/userinfo"
        - name: GF_AUTH_GOOGLE_ALLOWED_DOMAINS
          valueFrom:
            secretKeyRef:
              name: google-clientid-secret
              key: alloweddomains
        - name: GF_SERVER_DOMAIN
          valueFrom:
            secretKeyRef:
              name: google-clientid-secret
              key: serverdomain
        - name: GF_SERVER_ROOT_URL
          valueFrom:
            secretKeyRef:
              name: google-clientid-secret
              key: rooturl
      volumes:
      - name: grafana-storage
        emptyDir: {}
      - name: "grafana-config-stackdriverdatasource"
        configMap:
          name: "grafana-config"
          items:
            - key: stackdriverdatasource
              path: stackdriver.yaml
      - name: "grafana-config-prometheusdatasource"
        configMap:
          name: "grafana-config"
          items:
            - key: prometheusdatasource
              path: prometheus.yaml
      - name: "grafana-config-bigquerydatasource"
        configMap:
          name: "grafana-config"
          items:
            - key: bigquerydatasource
              path: bigquery.yaml
      - name: "grafana-config-dashboards"
        configMap:
          name: "grafana-config"
          items:
            - key: dashboards
              path: dashboards.yaml
      - name: "grafana-config-k8sdashboard"
        configMap:
          name: "grafana-config"
          items:
            - key: k8sdashboard
              path: k8sdashboard.json
      - name: "grafana-config-loadbalancerdashboard"
        configMap:
          name: "grafana-config"
          items:
            - key: loadbalancerdashboard
              path: loadbalancerdashboard.json
      - name: "grafana-config-cloud-sql-dashboard"
        configMap:
          name: "grafana-config"
          items:
            - key: cloud-sql-dashboard
              path: cloud-sql-dashboard.json
      - name: "grafana-config-k8sprometheus"
        configMap:
          name: "grafana-config"
          items:
            - key: k8sprometheus
              path: k8sprometheus.json
      - name: "grafana-config-cloudstorage-dashboard"
        configMap:
          name: "grafana-config"
          items:
            - key: cloudstorage-dashboard
              path: cloudstorage-dashboard.json
      - name: "grafana-config-bigquery-logs"
        configMap:
          name: "grafana-config"
          items:
            - key: bigquery-logs
              path: bigquery-logs.json
